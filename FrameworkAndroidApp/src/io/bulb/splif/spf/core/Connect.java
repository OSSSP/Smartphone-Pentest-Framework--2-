package io.bulb.splif.spf.core;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.ArrayList;

import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;

import android.os.Handler;
import android.util.Log;

public class Connect extends SPFThread {

	public Connect(String mip, String mkey, String mpath, Handler mhandler) {
		super(mip, mkey, mpath, mhandler);
	}

	public void run() {
		// Perform thread commands...
		String mConnection = key.concat(" CONNECT");
		ArrayList<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
		nameValuePairs.add(new BasicNameValuePair("text", mConnection));
		try {
			/**
			 * Openning a connection between mobile application and web server
			 */
			HttpClient httpClient = new DefaultHttpClient();

			/**
			 * SPF mobile application post results to postto
			 */
			String http = "http://";
			String url = "/connectuploader.php";
			String uri = http.concat(ip);
			String postto1 = uri.concat(path);
			String postto = postto1.concat(url);

			HttpPost httppost = new HttpPost(postto);
			httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
			httpClient.execute(httppost);

			/**
			 * SPF Web server take command from pullfrom
			 */
			String url2 = "/connect";
			String pullfrom = postto1.concat(url2);
			URL url3 = new URL(pullfrom);
			Log.i(TAG, "Connection to http://" + pullfrom + " with " + key);

			//for (int i = 0; i < 100; i++) {
			int i = 0;
			while (mConnected != true) {
				BufferedReader in = new BufferedReader(new InputStreamReader(
						url3.openStream()));

				if (getStop() == 1) // Call the stopThread() method to stop
									// after 100 loops.
					break;
				sendToHandler("LOG" + "," + "Connection attempt :" + i++);

				if (in != null) {
					String inputLine;
					while ((inputLine = in.readLine()) != null) {
						Log.i(TAG, inputLine + " received from Stream server");
						sendToHandler("LOG" + "," + inputLine + " received from server");

						String connectedstring = key.concat(" CONNECTED");

						if (inputLine.equals(connectedstring)) {
							Log.i(TAG, "SPliF is CONNECTED to stream server");
							sendToHandler("LOG" + "," + "Application is conected to server !");

							mConnected = true;

							//break;//i = 100;

						}
					}
				}

			} // end for
				// Call the stopThread() method.
			stopThread(this);
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
