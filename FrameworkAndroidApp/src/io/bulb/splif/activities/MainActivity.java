package io.bulb.splif.activities;

import io.bulb.splif.R;

import io.bulb.splif.spf.core.Framework;
import android.annotation.TargetApi;
import android.app.ActionBar;
import android.app.Activity;

import android.content.Context;
import android.content.Intent;

import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;

import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;

import android.widget.TextView;

import android.widget.Toast;

@TargetApi(Build.VERSION_CODES.HONEYCOMB)
public class MainActivity extends Activity implements OnClickListener {
	static final String VERSION = "v 0.2.6";
	/**
	 * ON or OFF State of SPF Mobile
	 */
	public static int off = 1;

	/*
	 * SPF Parameters
	 */
	String ip;
	String path;
	String key;

	/*
	 * SPF Instance
	 */
	Framework spf;

	/*
	 * SPF Mobile Interface
	 */
	EditText edittext1 = null;
	EditText edittext2 = null;
	EditText edittext3 = null;
	String connected = null;
	Button button1 = null;
	ScrollView scroll1 = null;


	/*
	 * Shell Displaying Informations
	 */
	TextView mLog = null;

	/**
	 * * Le Handler à charge de la communication entre la Thread de background
	 * et celle de l'IHM
	 */
	Handler handler;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		edittext1 = (EditText) findViewById(R.id.EditText01);
		edittext2 = (EditText) findViewById(R.id.EditText02);
		edittext3 = (EditText) findViewById(R.id.EditText03);
		button1 = (Button) findViewById(R.id.button1);
		button1.setOnClickListener(this);
		button1.setText("Attach");

		mLog = (TextView) findViewById(R.id.textView5);
		scroll1 = (ScrollView) findViewById(R.id.scrollView1);
		
		
		mLog.setText("SPF v 0.2.7\n");
		
		handler = new Handler() {
			@Override
			public void handleMessage(Message msg) {
				// get the bundle and extract data by key
				Bundle b = msg.getData();
				String key = b.getString("My Key");
				String[] message = key.split(",");
				mLog.append(message [1] + "\n");
				((ScrollView) scroll1).fullScroll(View.FOCUS_DOWN);
			}
		};

	}

	@Override
	public void onClick(View v) {

		if (off == 1) {
			if (edittext1.getText().toString().equals("")
					&& edittext2.getText().toString().equals("")
					&& edittext3.getText().toString().equals("")) {
				emptySPFParameters();
			} else {
				ip = edittext1.getText().toString();
				key = edittext3.getText().toString();
				path = edittext2.getText().toString();

				ConnectivityManager connMgr = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
				NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();

				if (networkInfo != null && networkInfo.isConnected()) {

					/*
					 * SPF Object
					 */

					spf = new Framework(ip, key, path, handler);

					button1.setText("Dettach");

					off = 0;
					/*
					 * It's better to list dynamically all functions from an xml
					 * file on the server
					 * 
					 * Intent intent2 = new Intent(getApplicationContext(),
					 * FunctionsActivity.class); startActivity(intent2);
					 */
				}

			}
		} else if (off == 0) {

			/*
			 * TODO : Change the color if button equal Attach to a dark color
			 */

			spf.setStop(1);// stop threads and kill them
			spf = null;
			button1.setText("Attach");
			off = 1;
			mLog.setText("SPF v 0.2.7\n");
		}
	}

	private void emptySPFParameters() {
		Context context = getApplicationContext();
		CharSequence text = "Please fill in !";
		int duration = Toast.LENGTH_SHORT;

		Toast toast = Toast.makeText(context, text, duration);
		toast.show();
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
		spf.setStop(1);// Must else threads don't stop
		spf = null;
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case R.id.menu_functions:
			
			// case if spf.isActive
			Intent i = new Intent(getApplicationContext(),
					PentestsActivity.class);
			startActivity(i);
			
			return true;

		case R.id.menu_help:

			return true;

		default:
			return super.onOptionsItemSelected(item);
		}
	}
}
